
Common header
	Content-Type:	application/x-www-form-urlencoded
	Accept:			application/json

User Register

- Request

	POST: http://192.168.0.171/api/register
	Header: (common-header)
	Body:
		first_name:					(required)	string(255)
		last_name: 					(required)	string(255)
		gender: 					(required)	enum('Male', 'Female')
		birthday: 					(required)	date
		document_number:			(required)	string(255) (passport number, driver license number or identity card number)
		document_type: 				(required)	enum('Passport','Driver License','Identity Card')
		user_photo: 				(required)	file
		document_photo: 			(required)	file
		professional_license_photo:	(required)	file
		citizenship_country			(optional)	strint(255)
		expiration_date				(optional)	date
		issuing_authority			(optional)	string(255)

- Response

	# Success

	{
		"result": "success",
		"data": {
			"id": 37,
			"first_name": "Jovan",
			"last_name": "Markovic",
			"gender": "Male",
			"birthday": "1978-08-31",
			"document_number": "1092103342529843401921250",
			"document_type": "Passport",
			"citizenship_country": null,
			"expiration_date": null,
			"issuing_authority": null,
			"document_photo": "/storage/documents/mwNglr4vyDm8vV4VgdK35aDBRrlzijiNE7KIFi6e.jpeg",
			"user_photo": "/storage/users/7ZIOWbxegdiZQ96HZVwkG5mkkV8CZwUFeqNX6Ca1.jpeg",
			"professional_license_photo": "/storage/licenses/HhB29IRl5GzLNu4nLLCEgVVCAWRfnm0hzYHjuOYj.jpeg",
			"is_professional": 1,
			"is_activated": 0,
			"email": null,
			"email_verify_code": null,
			"email_verified_at": null,
			"order_contact_name": null,
			"order_email": null,
			"order_phone_number": null,
			"order_address_1": null,
			"order_address_2": null,
			"card_number": null,
			"card_holder": null,
			"card_expire_date": null,
			"card_cvc": null,
			"created_at": "2020-05-24T13:49:34.000000Z",
			"updated_at": "2020-05-24T13:49:34.000000Z",
			"token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiOGQ3Y2NkZWViNmFiYTBiZmUwYmFhMzM4MWE0NmMzM2VmN2M3MmJkZjE3YWFmN2EwOWM4OGFkNGYyOWVmMGFjOTliMjM2ZWI0ZjQ0NmVjNTYiLCJpYXQiOjE1OTAzMjgxNzQsIm5iZiI6MTU5MDMyODE3NCwiZXhwIjoxNjIxODY0MTc0LCJzdWIiOiIzNyIsInNjb3BlcyI6W119.i9htmcAVidAlYQvK3ZBu76MI6FwXxsXLAFIQ6kBTOD2MPuAV0ty7YyFngfOc9y0UUsp0yq9A_3hNcBOJA22mWX8o9MMOPOxTwNIQIInRNcslpTlcyRRWXX8bAABjbA9HRzvqAIDusyU5UjDN5ndKoc7nKfaBy3cna_qAz9O6eW14bFUWgFoeVq6Hv_asA41qSJeLrW37YVxVgWJwHl8dpV_8Sm6A782f1VDLsA_MkvVMWTRqA7DlUP4kOOOy1pXBwZh9Oj9wsv9VrYgGnOuS3gqloWMW9q_KCglm1_IXKLhCPDaauJV7wv4HQNEjVfezW-4WJ4HJs4mlnnuVoiE2NQ7t0MOfglTjeIasRhiyrHWQEwppIkLydiz6vDzV26c3bZEMhNBHcy4pXsejfKr-2eewKUxc98au_kKqNE1NLSEkMJLJ6evf7uO3GGlNj51foETkfDEWZbiGLsGVpEMIkBHECiNWUNGEk9_TnyuS8rkzvy82LbfxcaeL1nE0x8hoxH7-Pn2q1F3aagy9wGtjkFdILcxnYxcSEIoh23YdneZFj7iQEisFSGtSj5acDglr4Mw-Fuk5yDldE7n_LzmXluqRMr2lJSpUEri43cPug_8Suonkb_0vz5Ae3k0fctNw0lF1Jn6dcsZQpjKvDY3xGtCV8ulGYspsv_-4JQv4u7s",
			"name": "Jovan Markovic",
			"test_status": "not_tested_for_1_week" ("not_tested_for_1_week", "positive", "negative")
		}
	}

	# Error
	{
		"result": "error",
		"message": "validation error"
	}

User Login
- Request
	POST: http://192.168.0.171/api/login
	Header: (common-header)
	Body:
		document_number: string(255)

- Response
	# Success
	{
		"result": "success",
		"data": {
			"id": 37,
			"first_name": "Jovan",
			"last_name": "Markovic",
			"gender": "Male",
			"birthday": "1978-08-31",
			"document_number": "1092103342529843401921250",
			"document_type": "Passport",
			"citizenship_country": null,
			"expiration_date": null,
			"issuing_authority": null,
			"document_photo": "/storage/documents/mwNglr4vyDm8vV4VgdK35aDBRrlzijiNE7KIFi6e.jpeg",
			"user_photo": "/storage/users/7ZIOWbxegdiZQ96HZVwkG5mkkV8CZwUFeqNX6Ca1.jpeg",
			"professional_license_photo": "/storage/licenses/HhB29IRl5GzLNu4nLLCEgVVCAWRfnm0hzYHjuOYj.jpeg",
			"is_professional": 1,
			"is_activated": 0,
			"email": null,
			"email_verify_code": null,
			"email_verified_at": null,
			"order_contact_name": null,
			"order_email": null,
			"order_phone_number": null,
			"order_address_1": null,
			"order_address_2": null,
			"card_number": null,
			"card_holder": null,
			"card_expire_date": null,
			"card_cvc": null,
			"created_at": "2020-05-24T13:49:34.000000Z",
			"updated_at": "2020-05-24T13:49:34.000000Z",
			"token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiNThkNmEwNGRlZjJjOGY4Yzk3MWJlZjQ5YTY3MjViODg5NmE2MDUxZDgxODhhNWU4NzVmZTI0NjA5YjZkNjBmNGIwNzg5YThkZmE2NGJiYTAiLCJpYXQiOjE1OTAzMjgyMzQsIm5iZiI6MTU5MDMyODIzNCwiZXhwIjoxNjIxODY0MjM0LCJzdWIiOiIzNyIsInNjb3BlcyI6W119.QAYNawD-WSg74UctBe3gZsCtHUMgmoQeLZ6rgUaGwcGNEZ4_97jJIVAnpFsUmi_cfcZwxUMVUVvi4HK_sJuZF5m2b2hndT-9gv3FhGk-GyOnsovIqPeNdUVJQ3dJFtglWBpQ_aR_W-mlhpeZfVGNjt01_MEXSo7rp5WCFMgIbLiX1B3xIT6oTD987MBgFB8eig10K-Vmg3gi-873CNTTUwD-AW_ClDma7OjCAPgMRifvzfAh61DGKFnbJLNAMlkz-p2JCgn4Cc8yVB6rOdELI-ryk6a106cZ3t5joNv97uqnVJ0CPG71OzbW5p5LIeIB2OuFsqOlYw9mCEpYDsTvG2fkjF1LlaoItDnd-Wh5wlgShbi_ESNCU5uE-8x-7PyMSzAdtSl4sO7ujrdXPfgexOcmWMxZhxHI_w8SrFwTb3tsKLEJu2NrgZzUkqvdytDzLfnfBkWfYA34lFgn_RwM6kOX4mXIRSUVAq46WnjV_lxRHPRMlASH9Xzgtdl-XZzw1PuhEnTVWsDadIaFbyuiGiRwUNnrB9aLJRULCRvkDGpvjAoMCIxlr4JodrPI40OLqJKHCeRtIspdIhBiGIcyczSujkk-q7x6CQILenlKrYpx5JoRSIwoVMJ1O0G7jM08t9__ovMJRnqZLJTpfepxqFxEW_0mVjFk3Bz_YzhkJMU",
			"test_status": "not_tested_for_1_week"
		}
	}

	# Error
	{
		"result": "error",
		"message": "Unauthorised"
	}


Get User detail information (logined user)
- Request
	POST: http://192.168.0.171/api/userDetails
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		none
- Response
	# Success
	{
		"result": "success",
		"data": {
			"id": 37,
			"first_name": "Jovan",
			"last_name": "Markovic",
			"gender": "Male",
			"birthday": "1978-08-31",
			"document_number": "1092103342529843401921250",
			"document_type": "Passport",
			"citizenship_country": null,
			"expiration_date": null,
			"issuing_authority": null,
			"document_photo": "/storage/documents/mwNglr4vyDm8vV4VgdK35aDBRrlzijiNE7KIFi6e.jpeg",
			"user_photo": "/storage/users/7ZIOWbxegdiZQ96HZVwkG5mkkV8CZwUFeqNX6Ca1.jpeg",
			"professional_license_photo": "/storage/licenses/HhB29IRl5GzLNu4nLLCEgVVCAWRfnm0hzYHjuOYj.jpeg",
			"is_professional": 1,
			"is_activated": 0,
			"email": null,
			"email_verify_code": null,
			"email_verified_at": null,
			"order_contact_name": null,
			"order_email": null,
			"order_phone_number": null,
			"order_address_1": null,
			"order_address_2": null,
			"card_number": null,
			"card_holder": null,
			"card_expire_date": null,
			"card_cvc": null,
			"created_at": "2020-05-24T13:49:34.000000Z",
			"updated_at": "2020-05-24T13:49:34.000000Z",
			"test_status": "not_tested_for_1_week"
		}
	}

	# Error
	{
		"message": "Unauthenticated."
	}

Verify Email Address
- Request
	POST: http://192.168.0.171/api/sendVerifyEmail
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		email: string(255)
- Response
	# Success
	{
		"result": "success",
		"data": {
			"id": 37,
			"first_name": "Jovan",
			"last_name": "Markovic",
			"gender": "Male",
			"birthday": "1978-08-31",
			"document_number": "1092103342529843401921250",
			"document_type": "Passport",
			"citizenship_country": null,
			"expiration_date": null,
			"issuing_authority": null,
			"document_photo": "/storage/documents/mwNglr4vyDm8vV4VgdK35aDBRrlzijiNE7KIFi6e.jpeg",
			"user_photo": "/storage/users/7ZIOWbxegdiZQ96HZVwkG5mkkV8CZwUFeqNX6Ca1.jpeg",
			"professional_license_photo": "/storage/licenses/HhB29IRl5GzLNu4nLLCEgVVCAWRfnm0hzYHjuOYj.jpeg",
			"is_professional": 1,
			"is_activated": 0,
			"email": "jovan@gmail.com",
			"email_verify_code": "9494",
			"email_verified_at": null,
			"order_contact_name": null,
			"order_email": null,
			"order_phone_number": null,
			"order_address_1": null,
			"order_address_2": null,
			"card_number": null,
			"card_holder": null,
			"card_expire_date": null,
			"card_cvc": null,
			"created_at": "2020-05-24T13:49:34.000000Z",
			"updated_at": "2020-05-24T13:53:56.000000Z"
		}
	}
	# Error
	{
		"result": "error",
		"message": "Need email address"
	}

Get user information (others)
- Request
	POST: http://192.168.0.171/api/getUserInfo
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		user_id: int(20)
- Response
	# Success
	{
		"result": "success",
		"data": {
			"id": 34,
			"first_name": "MICHAEL, M",
			"last_name": "MOTORIST",
			"user_photo": "/storage/users/X65rUEGtmyMAOgUWhALmax56uWWWtLTjBOZFZNmx.jpeg"
		}
	}
	# Error
	{
		"result": "error",
		"message": "Need user id"
	}

Set order information into user infomation
- Request
	POST: http://192.168.0.171/api/setOrderInfo
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		order_contact_name:	(required)	string(255)
		order_email: 		(required)	string(255)
		order_phone_number: (required)	string(255)
		order_address_1: 	(optional)	string(255)
		order_address_2: 	(optional)	string(255)

- Response
	# Success
	{
		"result": "success",
		"data": {
			"id": 37,
			"first_name": "Jovan",
			"last_name": "Markovic",
			"gender": "Male",
			"birthday": "1978-08-31",
			"document_number": "1092103342529843401921250",
			"document_type": "Passport",
			"citizenship_country": null,
			"expiration_date": null,
			"issuing_authority": null,
			"document_photo": "/storage/documents/mwNglr4vyDm8vV4VgdK35aDBRrlzijiNE7KIFi6e.jpeg",
			"user_photo": "/storage/users/7ZIOWbxegdiZQ96HZVwkG5mkkV8CZwUFeqNX6Ca1.jpeg",
			"professional_license_photo": "/storage/licenses/HhB29IRl5GzLNu4nLLCEgVVCAWRfnm0hzYHjuOYj.jpeg",
			"is_professional": 1,
			"is_activated": 0,
			"email": "jovan@gmail.com",
			"email_verify_code": "9494",
			"email_verified_at": null,
			"order_contact_name": "Jacek",
			"order_email": "ja@go-models.com",
			"order_phone_number": "20394824958",
			"order_address_1": "address 1",
			"order_address_2": "address 2",
			"card_number": null,
			"card_holder": null,
			"card_expire_date": null,
			"card_cvc": null,
			"created_at": "2020-05-24T13:49:34.000000Z",
			"updated_at": "2020-05-24T13:57:59.000000Z"
		}
	}

	# Error
	{
		"result": "error",
		"message": "Validateion error"
	}

Add test information
- Request
	POST: http://192.168.0.171/api/addTest
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		user_id: 		(required)	int(20)
		tester_id:		(required)	int(20)
		viral_count:	(required)	int(20)
		is_positive: 	(required)	tinyint(1) (0: Negative, 1: Positive)
		testkit_number: (required)	string(255)
		is_confirmed: 	(required)	tinyint(1) (0: created, 1: confirmed)
- Response
	# Success
	{
		"result": "success",
		"data": {
			"id": 19,
			"user_id": 34,
			"user_name": "MICHAEL, M MOTORIST",
			"tester_id": 35,
			"tester_name": "CLAIRE BENNETT",
			"viral_count": "123",
			"is_positive": 1,
			"testkit_number": "9469284729834",
			"is_confirmed": 1,
			"test_date": "2020-05-24 16:00:26",
			"created_at": "2020-05-24T14:00:26.000000Z",
			"updated_at": "2020-05-24T14:00:26.000000Z"
		}
	}

	# Error
	{
		"result": "error",
		"message": "Validation error"
	}

Get test history by patient
- Request
	POST: http://192.168.0.171/api/getTestsByPatient
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		none

- Response
	# Success
	{
		"result": "success",
		"count": 15,
		"data": [
			{
				"id": 15,
				"user_id": 16,
				"user_name": "Jovan Markovic",
				"tester_id": 15,
				"tester_name": "Jovan Markovic",
				"viral_count": "123",
				"is_positive": 1,
				"testkit_number": "9469284729834",
				"is_confirmed": 1,
				"test_date": "2020-05-23 06:39:07",
				"created_at": "2020-05-23T04:39:07.000000Z",
				"updated_at": "2020-05-23T04:39:07.000000Z"
			},
			{
				"id": 14,
				"user_id": 16,
				"user_name": "Jovan Markovic",
				"tester_id": 15,
				"tester_name": "Jovan Markovic",
				"viral_count": "123",
				"is_positive": 1,
				"testkit_number": "9469284729834",
				"is_confirmed": 1,
				"test_date": "2020-05-23 00:52:09",
				"created_at": "2020-05-22T22:52:09.000000Z",
				"updated_at": "2020-05-22T22:52:09.000000Z"
			},
			... ...
			{
				"id": 1,
				"user_id": 16,
				"user_name": "Jovan Markovic",
				"tester_id": 15,
				"tester_name": "Jovan Markovic",
				"viral_count": "123",
				"is_positive": 1,
				"testkit_number": "9469284729834",
				"is_confirmed": 1,
				"test_date": "2020-05-21 23:12:47",
				"created_at": "2020-05-21T21:12:47.000000Z",
				"updated_at": "2020-05-21T21:12:47.000000Z"
			}
		]
	}

	# Error
	{
		"result": "error",
		"message": "Need user id"
	}

Get test history by professional
- Request
	POST: http://192.168.0.171/api/getTestsByProfessional
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		none

- Response
	# Success
	{
		"result": "success",
		"count": 17,
		"data": [
			{
				"id": 17,
				"user_id": 16,
				"user_name": "Jovan Markovic",
				"tester_id": 15,
				"tester_name": "Jovan Markovic",
				"viral_count": "123",
				"is_positive": 1,
				"testkit_number": "9469284729834",
				"is_confirmed": 1,
				"test_date": "2020-05-23 07:25:43",
				"created_at": "2020-05-23T05:25:43.000000Z",
				"updated_at": "2020-05-23T05:25:43.000000Z"
			},
			{
				"id": 16,
				"user_id": 16,
				"user_name": "Jovan Markovic",
				"tester_id": 15,
				"tester_name": "Jovan Markovic",
				"viral_count": "123",
				"is_positive": 1,
				"testkit_number": "9469284729834",
				"is_confirmed": 1,
				"test_date": "2020-05-23 07:23:08",
				"created_at": "2020-05-23T05:23:08.000000Z",
				"updated_at": "2020-05-23T05:23:08.000000Z"
			},
			... ...
			{
				"id": 1,
				"user_id": 16,
				"user_name": "Jovan Markovic",
				"tester_id": 15,
				"tester_name": "Jovan Markovic",
				"viral_count": "123",
				"is_positive": 1,
				"testkit_number": "9469284729834",
				"is_confirmed": 1,
				"test_date": "2020-05-21 23:12:47",
				"created_at": "2020-05-21T21:12:47.000000Z",
				"updated_at": "2020-05-21T21:12:47.000000Z"
			}
		]
	}

	# Error
	{
		"result": "error",
		"message": "Need tester id"
	}

Get notification history
- Request
	POST: http://192.168.0.171/api/getNotifications
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		none

- Response
	# Success
	{
		"result": "success",
		"count": 10,
		"data": [
			{
				"id": 21,
				"user_id": 15,
				"notification_type": "Performed test",
				"notification_date": "2020-05-23 07:25:43",
				"title": "You performed corona test!",
				"content": "You performed a corona test to Jovan Markovic at 2020-05-23 07:25:43.",
				"created_at": "2020-05-23T05:25:43.000000Z",
				"updated_at": "2020-05-23T05:25:43.000000Z"
			},
			{
				"id": 19,
				"user_id": 15,
				"notification_type": "Performed test",
				"notification_date": "2020-05-23 07:23:08",
				"title": "You performed corona test!",
				"content": "You performed a corona test to Jovan Markovic at 2020-05-23 07:23:08.",
				"created_at": "2020-05-23T05:23:08.000000Z",
				"updated_at": "2020-05-23T05:23:08.000000Z"
			},
			... ...
			{
				"id": 8,
				"user_id": 15,
				"notification_type": "Performed test",
				"notification_date": "2020-05-22 02:48:52",
				"title": "You performed corona test!",
				"content": "You performed a corona test to Jovan Markovic at 2020-05-22 02:48:52.",
				"created_at": "2020-05-22T00:48:52.000000Z",
				"updated_at": "2020-05-22T00:48:52.000000Z"
			}
		]
	}

	# Error
	{
	    "message": "Unauthenticated."
	}


Create Order payment
- Request
	POST: http://192.168.0.171/api/createOrder
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		card_number:		(required)	string(255)
		card_holder: 		(required)	string(255)
		card_expire_date:	(required)	string(255) (for example: 22/04 = 2022.04)
		card_cvc: 			(required)	string(255)
		quantity: 			(required)	int()

- Response
	# Success
	{
		"result": "success",
		"data": {
			"id": 5,
			"user_id": 15,
			"product_name": "Test kit",
			"quantity": 12,
			"order_date": "2020-05-23 07:02:57",
			"card_holder": "jovan markovic",
			"card_number": "4242424242424242",
			"card_expire_date": "22/06",
			"card_cvc": "123",
			"created_at": "2020-05-23T05:02:57.000000Z",
			"updated_at": "2020-05-23T05:02:57.000000Z"
		}
	}

	# Error
	{
		"result": "error",
		"message": "Validation error"
	}


Get Order history
- Request
	POST: http://192.168.0.171/api/getOrders
	Header: (common-header)
		Authorization: "Bearer {---- Your API Token ----}"
	Body:
		none
- Response
	# Success
	{
		"result": "success",
		"count": 4,
		"data": [
			{
				"id": 15,
				"user_id": 36,
				"product_name": "Test kit",
				"quantity": 20,
				"order_date": "2020-05-24 16:13:29",
				"card_holder": "Jovan Markovic",
				"card_number": "4242424242424242",
				"card_expire_date": "22/04",
				"card_cvc": "234",
				"created_at": "2020-05-24T14:13:29.000000Z",
				"updated_at": "2020-05-24T14:13:29.000000Z"
			},
			{
				"id": 14,
				"user_id": 36,
				"product_name": "Test kit",
				"quantity": 20,
				"order_date": "2020-05-24 16:13:23",
				"card_holder": "Jovan Markovic",
				"card_number": "4242424242424242",
				"card_expire_date": "22/04",
				"card_cvc": "234",
				"created_at": "2020-05-24T14:13:23.000000Z",
				"updated_at": "2020-05-24T14:13:23.000000Z"
			},
			{
				"id": 13,
				"user_id": 36,
				"product_name": "Test kit",
				"quantity": 20,
				"order_date": "2020-05-24 16:13:20",
				"card_holder": "Jovan Markovic",
				"card_number": "4242424242424242",
				"card_expire_date": "22/04",
				"card_cvc": "234",
				"created_at": "2020-05-24T14:13:20.000000Z",
				"updated_at": "2020-05-24T14:13:20.000000Z"
			},
			{
				"id": 12,
				"user_id": 36,
				"product_name": "Test kit",
				"quantity": 20,
				"order_date": "2020-05-24 16:12:29",
				"card_holder": "Jovan Markovic",
				"card_number": "4242424242424242",
				"card_expire_date": "22/04",
				"card_cvc": "234",
				"created_at": "2020-05-24T14:12:29.000000Z",
				"updated_at": "2020-05-24T14:12:29.000000Z"
			}
		]
	}

	# Error
	{
		"message": "Unauthenticated."
	}
